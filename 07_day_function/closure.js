// 闭包

// 有权访问另一个函数作用域中变量的函数


// 有关如何创建作用域链以及作用域链有什么作用的细节，对彻底理解闭包至关重要。
// 当某个函数被调用时，会创建一个执行环境（execution context）及相应的作用域链。
// 然后，使用 arguments 和其他命名参数的值来初始化函数的活动对象（activation object）。但在作用域
// 链中，外部函数的活动对象始终处于第二位，外部函数的外部函数的活动对象处于第三位，……直至作为作用域链终点的全局执行环境。